################################################################
# Global configuration
################################################################

# Enable debug mode
#
# Optional
# Default: false
#
debug = false

insecureSkipVerify = true
# Traefik logs file
# If not defined, logs to stdout
#
# Optional
# 
# [traefiklog]
# filePath = "log/traefik.log"

# Log level
#
# Optional
# Default: "ERROR"

logLevel = "WARN"

# Entrypoints to be used by frontends that do not specify any entrypoint.
# Each frontend can specify its own entrypoints.
#
# Optional
# Default: ["http"]
#
defaultEntryPoints = ["http", "https"]

# Entrypoints definition
#
# Optional
# Default:
[entryPoints]
[entryPoints.http]
address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
[entryPoints.https]
address = ":443"
	[entryPoints.https.tls]
      minVersion = "VersionTLS12"
      cipherSuites = [
         "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 
         "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 
         "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305" 
      ]
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/sslcert.crt"
      keyFile = "certs/sslcert.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/supercon.crt"
      keyFile = "certs/supercon.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/pax-2021.crt"
      keyFile = "certs/pax-2021.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/equitana-2021.crt"
      keyFile = "certs/equitana-2021.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/complexcon-2021.crt"
      keyFile = "certs/complexcon-2021.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/eccc-2021.crt"
      keyFile = "certs/eccc-2021.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/c2e2-2021.crt"
      keyFile = "certs/c2e2-2021.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/mcm-london-2022.crt"
      keyFile = "certs/mcm-london-2022.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/starwars-celebration-2022.crt"
      keyFile = "certs/starwars-celebration-2022.key"
      [[entryPoints.https.tls.certificates]]
      certFile = "certs/egx-2022.crt"
      keyFile = "certs/egx-2022.key"
[entryPoints.traefik]
address = ":8080"

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
# [accessLog]

# Sets the file path for the access log. If not specified, stdout will be used.
# Intermediate directories are created if necessary.
#
# Optional
# Default: os.Stdout
#
# filePath = "/path/to/log/log.txt"

# Format is either "json" or "common".
#
# Optional
# Default: "common"
#
# format = "common"


#[http.middlewares]
#  [http.middlewares.limit.buffering]
#  maxRequestBodyBytes = 104857600
#[http.middlewares]
#  [http.middlewares.limit.buffering]
#    memRequestBodyBytes = 2000000

################################################################
# API definition
################################################################

[api]
  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  entryPoint = "traefik"

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  dashboard = true

  # Enable debug mode.
  # This will install HTTP handlers to expose Go expvars under /debug/vars and
  # pprof profiling data under /debug/pprof.
  # Additionally, the log level will be set to DEBUG.
  #
  # Optional
  # Default: false
  #
  debug = false

################################################################
# Service Fabric provider
################################################################

# Enable Service Fabric configuration backend
[servicefabric]

# Service Fabric Management Endpoint
clustermanagementurl = "https://localhost:19080"
# Note: use "https://localhost:19080" if you're using a secure cluster

# Service Fabric Management Endpoint API Version
apiversion = "3.0"

[ping]


# Enable TLS connection.
#
# Optional
#
[serviceFabric.tls]
  cert = "certs/clustercert.crt"
  key = "certs/clustercert.key"
  insecureskipverify = true
